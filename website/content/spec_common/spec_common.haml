%h1
  Common Behaviors
%p
  %b
    Version
  \: 0.1
%p
  %b
    Last Updated
  \: 9 February 2009
%p
  This document specifies constraints that apply to all the requests and responses that occur in the RESTful APIs supported by the Sun Cloud Computing Platform, hereinafter referred to as &quot;The Platform&quot;.
#toc.toc
  #toctitle.toc-title
    %span
      Contents
  #toccontents.toc-contents
    %ul
      %li
        1
        %a{ :href => "#Imperative_Terms_In_Specifications" }
          Imperative Terms In Specifications
      %li
        2
        %a{ :href => "#Transport_Protocol" }
          Transport Protocol
      %li
        3
        %a{ :href => "#URI_Space" }
          URI Space
      %li
        4
        %a{ :href => "#Media_Types" }
          Media Types
      %li
        5
        %a{ :href => "#Request_Headers" }
          Request Headers
      %li
        6
        %a{ :href => "#Request_Parameters" }
          Request Parameters
      %li
        7
        %a{ :href => "#Response_Headers" }
          Response Headers
      %li
        8
        %a{ :href => "#Standard_HTTP_Status_Codes" }
          Standard HTTP Status Codes
      %li
        9
        %a{ :href => "#Error_Response_Message_Bodies" }
          Error Response Message Bodies
    %ul
      %li
        9.1
        %a{ :href => "#Introduction" }
          Introduction
      %li
        9.2
        %a{ :href => "#Data_Models" }
          Data Models
    %ul
      %li
        9.2.1
        %a{ :href => "#Messages_Data_Model" }
          Messages Data Model
      %li
        9.2.2
        %a{ :href => "#Message_Data_Model" }
          Message Data Model
    %li
      10
      %a{ :href => "#Version_Request_Type" }
        Version Request Type
    %ul
      %li
        10.1
        %a{ :href => "#Introduction" }
          Introduction
      %li
        10.2
        %a{ :href => "#Version_Data_Model" }
          Version Data Model
%p
  %br
%h1
  %a{ :name => "Imperative_Terms_In_Specifications" }
  Imperative Terms In Specifications
%p
  The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document, and all other documents that comprise the specification of The Platform RESTful API, are to be interpreted as described in &quot;Key words for use in RFCs to Indicate Requirement Levels&quot; (RFC 2119).
%h1
  %a{ :name => "Transport_Protocol" }
  Transport Protocol
%p
  All of The Platform APIs are based on the Hypertext Transfer Protocol, version 1.1 (RFC 2616).  Each request will be authenticated using HTTP Basic Authentication (RFC 2617).  Therefore, requests sent from clients on the public Internet (and not on a secure channel such as a VPN)
  %b
    MUST
  use the
  %i
    https
  protocol.
%h1
  %a{ :name => "URI_Space" }
  URI Space
%p
  The resources in the system are Spaces, Virtual Data Centers (VDCs), Virtual Machines (VMs), VM Templates, and Networks.  All are identified by URIs.   To begin operations, a client must know the URI for a Space.  Dereferencing it will yield a representation of the space containing links to the VDCs, Templates, and Networks in that space.  Similarly, dereferencing a VDC will yield a representation that identifies the VMs in the VDC.
%p
  Clients MUST NOT make assumptions about the layout of the URIs within a Space.
%h1
  %a{ :name => "Media_Types" }
  Media Types
%p
  In The Platform API, resource representations and request bodies are normally encoded in JSON, as specified in RFC4267.
%p
  Each type of resource has its own media-type, which matches the pattern
  %i
    application/vnd.com.sun.cloud.xxxxx+json
  , where &quot;xxxxx&quot; represents the portion of the identifier unique to a particular representation format for each service.
%p
  The Platform
  %b
    MUST
  provide representations of all resources available in JSON.  The Platform
  %b
    MAY
  also provide resource represenations in HTML when interacting with a human-oriented User-Agent.
%p
  The Platform
  %b
    MUST
  accept requests from clients encoded in JSON.  The Platform
  %b
    MAY
  also accept
  %i
    application/x-www-form-urlencoded
  (i.e. simple HTML forms) for request entities that only need simple name/value pairs.
%h1
  %a{ :name => "Request_Headers" }
  Request Headers
%p
  In requests made to services implementing Sun Cloud Computing Platform APIs, several specific HTTP headers are used as described in the following table:
%div{ :style => "overflow-x: auto;" }
  %div{ :style => "margin: 0px 2px 0px 2px;" }
    %table{ "-" => "", :border => "1", :width => "100%" }
      %tr
        %th
          Header
        %th
          Supported Values
        %th
          Description of Use
        %th
          Required
      %tr
        %td
          Accept
        %td
          Comma-delimited list of media types or media type patterns.
        %td
          Indicates to the server what media type(s) this client is prepared to accept.
        %td
          Recommended, on requests that will produce a response message body.
      %tr
        %td
          Authorization
        %td
          \&quot;Basic &quot; plus username and password (per RFC 2617).
        %td
          Identifies the authorized user making this request.
        %td
          Yes, on all requests.
      %tr
        %td
          Content-Length
        %td
          Length (in bytes) of the request message body.
        %td
          Describes the size of the message body.
        %td
          Yes, on requests that contain a message body.(1)
      %tr
        %td
          Content-Type
        %td
          Media type describing the request message body.
        %td
          Describes the representation and syntax of the request message body.
        %td
          Yes, on requests that contain a message body.
      %tr
        %td
          Host
        %td
          Identifies the origin host receiving the message.
        %td
          Required to allow support of multiple origin hosts at a single IP address.
        %td
          All requests.  Note that since a single Space may spread its URIs across multiple hosts, this may need to be re-set for each request.
      %tr
        %td
          X-YYYYY-Client-Specification-Version
        %td
          String containing a specification version number.
        %td
          Declares the specification version of the YYYYY API that this client was programmed against.
        %td
          No (current version is assumed if this header is not present).
%p
  (1) Some APIs
  %b
    MAY
  require a &quot;Content-Length: 0&quot; header to be included on a POST request that contains no request message body.
%p
  Note that, since all interactions with RESTful Sun Cloud Computing Platform APIs are stateless, no
  %i
    Cookie
  header (or any other mechanism to provide a session identifier) is used.
%h1
  %a{ :name => "Request_Parameters" }
  Request Parameters
%p
  Since the URI space is controlled by the server, client programs MUST not make any assumptions about the meanings of request parameters.
%h1
  %a{ :name => "Response_Headers" }
  Response Headers
%p
  In responses returned by The Platform, several specific HTTP headers are used as described in the following table:
%div{ :style => "overflow-x: auto;" }
  %div{ :style => "margin: 0px 2px 0px 2px;" }
    %table{ "-" => "", :border => "1", :width => "100%" }
      %tr
        %th
          Header
        %th
          Supported Values
        %th
          Description of Use
        %th
          Required
      %tr
        %td
          Content-Length
        %td
          Length (in bytes) of the response message body.
        %td
          Describes the size of the message body.
        %td
          Yes, on responses that contain a message body.
      %tr
        %td
          Content-Type
        %td
          Media type describing the response message body.
        %td
          Describes the representation and syntax of the response message body.
        %td
          Yes, on responses that contain a message body.
      %tr
        %td
          Location
        %td
          Canonical URI of a newly created resource.
        %td
          Returns a new URI that can be used to request a representation of the newly created resource.
        %td
          Yes, on responses to requests that create new server side resources accessible via a URI.
%p
  FIXME - Document cache control headers and behavior somewhere.
%h1
  %a{ :name => "Standard_HTTP_Status_Codes" }
  Standard HTTP Status Codes
%p
  Sun Cloud Computing Platform APIs will return standard HTTP response codes as described in the following table, under the conditions listed in the description.
%div{ :style => "overflow-x: auto;" }
  %div{ :style => "margin: 0px 2px 0px 2px;" }
    %table{ "-" => "", :border => "1", :width => "100%" }
      %tr
        %th
          HTTP Status
        %th
          Description
      %tr
        %td
          200 OK
        %td
          The request was successfully completed.  If this request created a new resource that is addressable with a URI, and a response body is returned containing a representation of the new resource, a 200 status will be returned with a
          %i
            Location
          header containing the canonical URI for the newly created resource.
      %tr
        %td
          201 Created
        %td
          A request that created a new resource was completed, and no response body containing a representation of the new resource is being returned.  A
          %i
            Location
          header containing the canonical URI for the newly created resource should also be returned.
      %tr
        %td
          202 Accepted
        %td
          The request has been accepted for processing, but the processing has not been completed.  Per the HTTP/1.1 specification, the returned entity (if any)
          %b
            SHOULD
          include an indication of the request's current status, and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.
      %tr
        %td
          204 No Content
        %td
          The server fulfilled the request, but does not need to return a response message body.
      %tr
        %td
          400 Bad Request
        %td
          The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on).
      %tr
        %td
          401 Unauthorized
        %td
          The authentication credentials included with this request are missing or invalid.  FIXME - talk about
          %i
            WWW-Authenticate
          header in the response.
      %tr
        %td
          403 Forbidden
        %td
          The server recognized your credentials, but you do not possess authorization to perform this request.
      %tr
        %td
          404 Not Found
        %td
          The request specified a URI of a resource that does not exist.
      %tr
        %td
          405 Method Not Allowed
        %td
          The HTTP verb specified in the request (DELETE, GET, HEAD, POST, PUT) is not supported for this request URI.
      %tr
        %td
          406 Not Acceptable
        %td
          The resource identified by this request is not capable of generating a representation corresponding to one of the media types in the
          %i
            Accept
          header of the request.
      %tr
        %td
          409 Conflict
        %td
          A creation or update request could not be completed, because it would cause a conflict in the current state of the resources supported by the server (for example, an attempt to create a new resource with a unique identifier already assigned to some existing resource).
      %tr
        %td
          500 Internal Server Error
        %td
          The server encountered an unexpected condition which prevented it from fulfilling the request.
      %tr
        %td
          501 Not Implemented
        %td
          The server does not (currently) support the functionality required to fulfill the request.
      %tr
        %td
          503 Service Unavailable
        %td
          The server is currently unable to handle the request due to temporary overloading or maintenance of the server.
%p
  FIXME - Do we need to worry about redirects?
%h1
  %a{ :name => "Error_Response_Message_Bodies" }
  Error Response Message Bodies
%h2
  %a{ :name => "Introduction" }
  Introduction
%p
  Successful requests will generally return an HTTP status code of 200 (OK), 201 (Created), or 204 (No Content), to indicate that the requested action has been successfully performed.  In addition, they might include a response message body (with an appropriate media type) containing a representation of the requested information.  However, it is possible for a number of things to go wrong.  The various underlying causes are described (as discussed in the previous section) by various HTTP status codes in the range 400-499 (for client side errors) or 500-599 (for server side problems).  The description of each request type
  %b
    SHOULD
  list the possible status codes returned by that request type.
%p
  If a response is returned with an error status code (400-499 or 500-599), the server
  %b
    SHOULD
  also return a response message body containing a
  %i
    messages
  data model, containing zero or more
  %i
    message
  data models, describing what went wrong.  The text values of such messages might be used, for example, to communicate with a human user of the client side application.
%h2
  %a{ :name => "Data_Models" }
  Data Models
%p
  Note that these data models, while discussed in the context of reporting error conditions, are also suitable for a general event logging interface, and might get additionally purposed for this use at some point in the future.
%h3
  %a{ :name => "Messages_Data_Model" }
  Messages Data Model
%p
  The entire list of messages included in a single error response are encapsulated in a
  %i
    messages
  data model.  The media type is
  %i
    application/vnd.com.sun.cloud.common.Messages+json
%div{ :style => "overflow-x: auto;" }
  %div{ :style => "margin: 0px 2px 0px 2px;" }
    %table{ "-" => "", :border => "1", :width => "100%" }
      %tr
        %th
          Field Name
        %th
          Type
        %th
          Occurs
        %th
          Description
      %tr
        %td
          message
        %td
          Message
        %td
          0..n
        %td
          Zero or more
          %i
            message
          data models for each individual message.
%h3
  %a{ :name => "Message_Data_Model" }
  Message Data Model
%p
  An individual
  %i
    message
  contains the following fields:
%div{ :style => "overflow-x: auto;" }
  %div{ :style => "margin: 0px 2px 0px 2px;" }
    %table{ "-" => "", :border => "1", :width => "100%" }
      %tr
        %th
          Field Name
        %th
          Type
        %th
          Occurs
        %th
          Description
      %tr
        %td
          action
        %td
          String
        %td
          0..1
        %td
          Symbolic identifier of the action being performed by the service implementation that triggered the creation of this message.
      %tr
        %td
          code
        %td
          String
        %td
          0..1
        %td
          Symbolic error code identifying the type of error reported by this message.
      %tr
        %td
          field
        %td
          String
        %td
          0..1
        %td
          Name of the input field (from the request data model) that this message is associated with.  If not specified, this message should be considered global to the entire request.
      %tr
        %td
          hint
        %td
          String
        %td
          0..1
        %td
          Localized text further describing the nature of the problem, possibly including potential workarounds that the client could try.
      %tr
        %td
          severity
        %td
          String
        %td
          0..1
        %td
          Label indicating the severity of the error condition represented by this message (SEVERE, WARNING, CONFIG, INFO, FINE, FINER, FINEST).
      %tr
        %td
          source
        %td
          String
        %td
          0..1
        %td
          Symbolic identifier of the service implementation component that triggered this message.
      %tr
        %td
          stack-trace
        %td
          String
        %td
          0..1
        %td
          Stack trace associated with this message.
      %tr
        %td
          %b
            text
        %td
          String
        %td
          1
        %td
          Localized text describing the nature of the problem reported by this
          %i
            message
          \.
%p
  %b
    SECURITY NOTE
  \: The
  %i
    action
  ,
  %i
    source
  , and
  %i
    stack-trace
  fields may convey sensitive information about the service implementation, and generally
  %b
    SHOULD NOT
  be included in messages returned to third party clients outside the cloud firewall.  However, they
  %b
    MAY
  be used in messages transmitted between internal application components.
%h1
  %a{ :name => "Version_Request_Type" }
  Version Request Type
%h2
  %a{ :name => "Introduction" }
  Introduction
%p
  Each instance of a Sun Cloud Computing Service API
  %b
    MUST
  provide a request type that allows a client to determine the specification version(s) supported by a particular instance of this API, as well as an implementation version primarily useful in error reporting.  This request type
  %b
    SHOULD
  have a URI matching
  %i
    {ServiceURI}/versions
  \.
%h2
  %a{ :name => "Version_Data_Model" }
  Version Data Model
%p
  The media type for a versions request response is
  %i
    application/vnd.com.sun.cloud.common.Version+json
%p
  The data model contains the following fields:
%div{ :style => "overflow-x: auto;" }
  %div{ :style => "margin: 0px 2px 0px 2px;" }
    %table{ "-" => "", :border => "1", :width => "100%" }
      %tr
        %th
          Field Name
        %th
          Type
        %th
          Occurs
        %th
          Description
      %tr
        %td
          %b
            implementation_version
        %td
          String
        %td
          1
        %td
          Implementation version identifier for this service instance.
      %tr
        %td
          %b
            specification_version
        %td
          String
        %td
          1
        %td
          Comma-delimited list of the specification version(s) supported by this service instance.
%p
  Copyright &copy; Sun Microsystems, 2009.  This work is licensed under
  %a.external{ :href => "http://creativecommons.org/licenses/by/3.0/" }
    Creative Commons Attribution 3.0 Unported License
.clear
/
